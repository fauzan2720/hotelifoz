// Mocks generated by Mockito 5.4.0 from annotations
// in hotelifoz/test/features/bookmark/model/services/bookmark_local_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:hotelifoz/core.dart' as _i3;
import 'package:hotelifoz/features/home/model/models/hotel_model.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BookmarkLocalServiceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkLocalServiceImpl extends _i1.Mock
    implements _i3.BookmarkLocalServiceImpl {
  MockBookmarkLocalServiceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<String, List<_i5.HotelModel>>> getBookmarks() =>
      (super.noSuchMethod(
        Invocation.method(
          #getBookmarks,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<String, List<_i5.HotelModel>>>.value(
            _FakeEither_0<String, List<_i5.HotelModel>>(
          this,
          Invocation.method(
            #getBookmarks,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<String, List<_i5.HotelModel>>>);
  @override
  _i4.Future<_i2.Either<String, _i5.HotelModel>> saveBookmark(
          _i5.HotelModel? hotel) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveBookmark,
          [hotel],
        ),
        returnValue: _i4.Future<_i2.Either<String, _i5.HotelModel>>.value(
            _FakeEither_0<String, _i5.HotelModel>(
          this,
          Invocation.method(
            #saveBookmark,
            [hotel],
          ),
        )),
      ) as _i4.Future<_i2.Either<String, _i5.HotelModel>>);
  @override
  void saveToLocalStorage() => super.noSuchMethod(
        Invocation.method(
          #saveToLocalStorage,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool isBookmark(_i5.HotelModel? hotel) => (super.noSuchMethod(
        Invocation.method(
          #isBookmark,
          [hotel],
        ),
        returnValue: false,
      ) as bool);
}
